package com.jiaoerzhang.platform.api;import com.jiaoerzhang.platform.entity.album.AlbumEntity;import com.jiaoerzhang.platform.entity.user.*;import com.jiaoerzhang.platform.lib_net.network.BaseResponse;import java.util.HashMap;import java.util.List;import com.jiaoerzhang.platform.lib_net.network.Response;import io.reactivex.Observable;import okhttp3.MultipartBody;import okhttp3.ResponseBody;import retrofit2.http.*;public interface UserApiService {    /**     * 注册     * @param url     * @param params     * @return     */    @POST    @FormUrlEncoded    Observable<RegEntity> reg(@Url String url, @FieldMap HashMap<String,String> params);    /**     * token     * @param url     * @param params     * @return     */    @POST    @FormUrlEncoded    Observable<Response> token(@Url String url, @FieldMap HashMap<String,String> params);    /**     * 登录     * @param url     * @param params     * @return     */    @POST    @FormUrlEncoded    Observable<BaseResponse<LoginEntity>> login(@Url String url, @FieldMap HashMap<String,String> params);    /**     * 验证码登录     * @param url     * @param params     * @return     */    @POST    @FormUrlEncoded    Observable<BaseResponse<LoginEntity>> codeLogin(@Url String url, @FieldMap HashMap<String,String> params);    /**     * 获取验证码     * @param url     * @param params     * @return     */    @POST    @FormUrlEncoded    Observable<BaseResponse<CodeEntity>> code(@Url String url, @FieldMap HashMap<String,String> params);    /**     * 用户信息     * @param url     * @param params     * @return     */    @POST    @FormUrlEncoded    Observable<BaseResponse<UserEntity>> getUserInfo(@Url String url, @FieldMap HashMap<String,String> params);    /**     * 是否购买     * @param url     * @param params     * @return     */    @POST    @FormUrlEncoded    Observable<BaseResponse<BuyedEntity>> buyed(@Url String url, @FieldMap HashMap<String,String> params);    /**     * 收藏类标     * @param url     * @param params     * @return     */    @POST    @FormUrlEncoded    Observable<BaseResponse<CollectionEntity>> collections(@Url String url, @FieldMap HashMap<String,String> params);    /**     * 问题分类     * @param url     * @param params     * @return     */    @GET    Observable<BaseResponse<ProblemEntity>> getProblems(@Url String url, @QueryMap HashMap<String,String> params);    /**     * 系统消息     * @param url     * @param params     * @return     */    @GET    Observable<BaseResponse<MessageEntity>> getSysMessages(@Url String url, @QueryMap HashMap<String,String> params);    /**     * 代币信息     * @param url     * @param params     * @return     */    @GET    Observable<BaseResponse<CoinHistoryEntity>> getCoinHistorys(@Url String url, @QueryMap HashMap<String,String> params);    /**     * 关注模特     * @param url     * @param params     * @return     */    @PUT    Observable<BaseResponse<CollectionEntity>> follow(@Url String url, @QueryMap HashMap<String,String> params);  /**     * 取消关注模特     * @param url     * @param params     * @return     */    @DELETE    Observable<BaseResponse<CollectionEntity>> unfollow(@Url String url, @QueryMap HashMap<String,String> params);    /**     * 签到     * @param url     * @param params     * @return     */    @PUT    Observable<Response> sign(@Url String url, @QueryMap HashMap<String,String> params);    /**     * 获取签到日期     * @param url     * @param params     * @return     */    @GET    Observable<SignEntity> signDates(@Url String url, @QueryMap HashMap<String,String> params);    /**     * 充币     * @param url     * @return     */    @POST    @Headers({"Content-Type: application/json","Accept: application/json"})    Observable<Response> rechargeCoin(@Url String url, @Body CoinEntity coinEntity); /**     * 消耗代币     * @param url     * @param params     * @return     */    @POST    @FormUrlEncoded    Observable<Response> costCoin(@Url String url, @FieldMap HashMap<String,Object> params);    /**     * 其他方式获取代币     * @param url     * @param params     * @return     */    @POST    @FormUrlEncoded    Observable<Response> gainCoin(@Url String url, @FieldMap HashMap<String,Object> params);    /**     * 其他方式获取代币     * @return     */    @GET("api/get-all-agreement")    Observable<ResponseBody> getPrivate();    /**     * 获取问题类型     * @return     * @param feedbackTypeUrl     */    @GET    Observable<FeedbackTypeEntity> getFeedbackTypes(@Url String feedbackTypeUrl);    /**     * 获取问题类型     * @return     * @param     */    @PUT    Observable<Response> feedbackProblem(@Url String url,@QueryMap HashMap<String,String> parmas);    /**     * 充值档位     * @return     * @param     */    @GET    Observable<BaseResponse<List<RechargeCoinEntity>>> getRechareCoinList(@Url String url);    /**     * 修改密码     * @return     * @param     */    @POST    @FormUrlEncoded    Observable<Response> updatePWD(@Url String url,@FieldMap HashMap<String,String> params); /**     * 修改头像     * @return     * @param     */    @POST    @Multipart    Observable<BaseResponse<HeadEntity>> uploadPhoto(@Url String url, @Query("username") String username, @Part MultipartBody.Part filePart); /**     * 修改昵称     * @return     * @param     */    @POST    @FormUrlEncoded    Observable<BaseResponse<NickNameEntity>> updateNickName(@Url String url,@FieldMap HashMap<String,String> params);    /**     * 充值记录     * @return     * @param     */    @GET    Observable<BaseResponse<RechargeLogEntity>> rechargeLog(@Url String url,@QueryMap HashMap<String,String> params); /**     * 普通专辑bvip列表     * @return     * @param     */    @GET    Observable<BaseResponse<List<BvipAlbumEntity>>> bvip(@Url String url,@QueryMap HashMap<String,String> params);    /**     * 是否购买bvip     * @return     * @param     */    @POST    @FormUrlEncoded    Observable<BaseResponse<IsBvipEntity>> isBvip(@Url String url,@FieldMap HashMap<String,String> params);  /**     * 已购买列表     * @return     * @param     */    @POST    @FormUrlEncoded    Observable<BaseResponse<MyBuyedEntity>> getBuyed(@Url String url,@FieldMap HashMap<String,String> params); /**     * 分享     * @return     * @param     */    @POST    @FormUrlEncoded    Observable<Response> share(@Url String url,@FieldMap HashMap<String,String> params);/**     * 分享信息     * @return     * @param     */    @GET    Observable<BaseResponse<List<ShareInfoEntity>>> shareInfo(@Url String url);    /**     * 支付方式     * @return     * @param     */    @POST    @FormUrlEncoded    Observable<BaseResponse<PayMethod>> getPaymethod(@Url String url,@FieldMap HashMap<String,String> params);}