package com.jiaoerzhang.platform.api;import com.jiaoerzhang.platform.entity.album.AlbumBean;import com.jiaoerzhang.platform.entity.album.AlbumDetailEntity;import com.jiaoerzhang.platform.entity.album.AlbumEntity;import com.jiaoerzhang.platform.entity.album.PhotoEntity;import com.jiaoerzhang.platform.entity.album.SearchHotEntity;import com.jiaoerzhang.platform.entity.user.CoinHistoryEntity;import com.jiaoerzhang.platform.entity.user.CollectionEntity;import com.jiaoerzhang.platform.lib_net.network.BaseResponse;import io.reactivex.Observable;import retrofit2.Call;import retrofit2.Response;import retrofit2.http.*;import java.util.HashMap;public interface AlbumApiService {    @GET("api/album/{id}")    Observable<BaseResponse<AlbumEntity.Content>> getAlbumDetail(@Path("id") String id);    @POST("api/photo/all")    @Headers({"Content-Type: application/json", "Accept: application/json"})    Observable<PhotoEntity> getPhotos(@Body AlbumBean albumBean);    /**     * 收藏专辑或图片     * @param url     * @param params     * @return     */    @PUT    Observable<BaseResponse<CollectionEntity>> collection(@Url String url, @QueryMap HashMap<String,String> params); /**     * 取消收藏专辑或图片     * @param url     * @param params     * @return     */    @DELETE    Observable<BaseResponse<CollectionEntity>> cancelCollection(@Url String url, @QueryMap HashMap<String,String> params); /**     * 搜索热词     * @param url     * @param params     * @return     */    @GET    Observable<BaseResponse<SearchHotEntity>> searchHotKeywords(@Url String url, @QueryMap HashMap<String,String> params);}