package com.jiaoerzhang.platform.adapter.user;import android.content.Context;import android.support.annotation.NonNull;import android.support.v7.widget.RecyclerView;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.TextView;import com.jiaoerzhang.platform.R;import com.jiaoerzhang.platform.entity.user.CoinHistoryEntity;import com.jiaoerzhang.platform.utils.TimeUtils;import java.util.ArrayList;import java.util.List;public class CoinAdapter extends RecyclerView.Adapter<RecyclerView.ViewHolder> {    private Context context;    private List<CoinHistoryEntity.Content> list = new ArrayList<>();    private LayoutInflater inflater;    private static final int COINADD = 0;//充值金币    private static final int COINMINUS = 1;//消耗金币    public CoinAdapter(Context context, List<CoinHistoryEntity.Content> all) {        this.context = context;        this.list = all;        inflater = LayoutInflater.from(context);    }    public void addList(List<CoinHistoryEntity.Content> data) {        if (data != null) {            list.addAll(data);            notifyDataSetChanged();        }    }    @NonNull    @Override    public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup viewGroup, int viewType) {        RecyclerView.ViewHolder holder;        if (viewType == COINADD) {            View view = inflater.inflate(R.layout.coin_add_item_layout, viewGroup, false);            holder = new CoinAdapter.CoinAddViewHolder(view);        } else if (viewType == COINMINUS) {            View view = inflater.inflate(R.layout.coin_minus_item_layout, viewGroup, false);            holder = new CoinAdapter.CoinMinusViewHolder(view);        } else {            holder = null;        }        return holder;    }    @Override    public void onBindViewHolder(@NonNull RecyclerView.ViewHolder viewHolder, int i) {        CoinHistoryEntity.Content content = list.get(i);        if (COINADD == viewHolder.getItemViewType()) {            CoinAdapter.CoinAddViewHolder coinAddViewHolder = (CoinAddViewHolder) viewHolder;            coinAddViewHolder.coinNum.setText("+" + content.getChangeNum());            coinAddViewHolder.coinTime.setText(TimeUtils.getDate(content.getEventTime() + "", "MM/dd/YYYY"));            setActionName(coinAddViewHolder.coinContent,content.getAction());        } else if (COINMINUS == viewHolder.getItemViewType()) {            CoinAdapter.CoinMinusViewHolder myViewHolder2 = (CoinAdapter.CoinMinusViewHolder) viewHolder;            myViewHolder2.coinNum.setText("-" + content.getChangeNum());            myViewHolder2.coinTime.setText(TimeUtils.getDate(content.getEventTime() + "", "MM/dd/YYYY"));            setActionName(myViewHolder2.coinContent, content.getAction());        }    }    private void setActionName(TextView coinContent, int action) {        String actionName = "";        if (1==action){            actionName = context.getString(R.string.Recharge);        }else if (2==action){            actionName = context.getString(R.string.signin);        }else if (3==action){            actionName = context.getString(R.string.Share);        }else if (4==action){            actionName = context.getString(R.string.Invitation);        }else if (11==action){            actionName = context.getString(R.string.buy);        }else if (12==action){            actionName = context.getString(R.string.buy_album);        }else if (13==action){            actionName = context.getString(R.string.day_buy);        }else if (14==action){            actionName = context.getString(R.string.week_buy);        }else if (15==action){            actionName = context.getString(R.string.month_buy);        }        coinContent.setText(actionName);    }    @Override    public int getItemCount() {        return list.size();    }    @Override    public int getItemViewType(int position) {        if (1 == list.get(position).getType()) {//1 为获得            return COINADD;        } else {//2为 消耗            return COINMINUS;        }    }    @Override    public long getItemId(int position) {        return super.getItemId(position);    }    class CoinAddViewHolder extends RecyclerView.ViewHolder {        private TextView coinContent, coinTime, coinNum;        public CoinAddViewHolder(@NonNull View itemView) {            super(itemView);            coinContent = itemView.findViewById(R.id.coin_content);            coinTime = itemView.findViewById(R.id.coin_time);            coinNum = itemView.findViewById(R.id.coin_num);        }    }    class CoinMinusViewHolder extends RecyclerView.ViewHolder {        private TextView coinContent, coinTime, coinNum;        public CoinMinusViewHolder(@NonNull View itemView) {            super(itemView);            coinContent = itemView.findViewById(R.id.coin_content);            coinTime = itemView.findViewById(R.id.coin_time);            coinNum = itemView.findViewById(R.id.coin_num);        }    }}