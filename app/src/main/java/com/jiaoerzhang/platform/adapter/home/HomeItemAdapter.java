package com.jiaoerzhang.platform.adapter.home;import android.content.Context;import android.content.Intent;import android.graphics.Bitmap;import android.graphics.BitmapFactory;import android.graphics.drawable.Drawable;import android.net.Uri;import android.support.annotation.Nullable;import android.view.View;import android.widget.TextView;import com.blankj.utilcode.util.SPUtils;import com.blankj.utilcode.util.ToastUtils;import com.chad.library.adapter.base.BaseQuickAdapter;import com.chad.library.adapter.base.BaseViewHolder;import com.facebook.drawee.view.SimpleDraweeView;import com.jiaoerzhang.platform.R;import com.jiaoerzhang.platform.api.AlbumApi;import com.jiaoerzhang.platform.api.AlbumApiService;import com.jiaoerzhang.platform.common.Constants;import com.jiaoerzhang.platform.entity.home.HomeEntity;import com.jiaoerzhang.platform.entity.user.CollectionEntity;import com.jiaoerzhang.platform.lib_net.network.BaseResponse;import com.jiaoerzhang.platform.ui.activity.album.AlbumDetailActivity;import com.jiaoerzhang.platform.ui.activity.album.NormalAlbumDetailActivity;import com.jiaoerzhang.platform.utils.RetrofitUtils;import java.io.InputStream;import java.util.HashMap;import java.util.List;import io.reactivex.android.schedulers.AndroidSchedulers;import io.reactivex.functions.Consumer;import io.reactivex.schedulers.Schedulers;import static com.blankj.utilcode.util.ActivityUtils.startActivity;public class HomeItemAdapter extends BaseQuickAdapter<HomeEntity.Content, BaseViewHolder> {    private Context context;    public HomeItemAdapter(Context context, int layoutResId, @Nullable List<HomeEntity.Content> data) {        super(layoutResId, data);        this.context = context;    }    @Override    protected void convert(BaseViewHolder helper, final HomeEntity.Content item) {        helper.setText(R.id.itemNameTv, item.person);        Uri uri = Uri.parse(item.coverUrl);        SimpleDraweeView simpleDraweeView = helper.itemView.findViewById(R.id.itemIcon);        simpleDraweeView.setImageURI(uri);        final TextView heartIcon = helper.itemView.findViewById(R.id.heart_icon);//        heartIcon.setText(item.ucollectNum+"");        heartIcon.setText("");        if ("true".equals(item.isNot)) {            setDrawable(heartIcon, true);        } else {            setDrawable(heartIcon, false);        }        heartIcon.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                HashMap<String, String> params = new HashMap<String, String>();                params.put("username", SPUtils.getInstance().getString("username"));                params.put("type", "1");                params.put("albumPhotoId", item.albumId + "");                if (item.isNot.equals("false")){                    RetrofitUtils.getInstance().createService(AlbumApiService.class)                            .collection(AlbumApi.COLLECTION_URL, params)                            .subscribeOn(Schedulers.io())                            .observeOn(AndroidSchedulers.mainThread())                            .subscribe(new Consumer<BaseResponse<CollectionEntity>>() {                                @Override                                public void accept(BaseResponse<CollectionEntity> collection) throws Exception {                                    if ("200".equals(collection.getStatus())) {                                        item.isNot = "true";                                        notifyDataSetChanged();                                        setDrawable(heartIcon, true);                                    }                                    ToastUtils.showShort(collection.getMessage());                                }                            }, new Consumer<Throwable>() {                                @Override                                public void accept(Throwable throwable) throws Exception {                                }                            });                }else{                    RetrofitUtils.getInstance().createService(AlbumApiService.class)                            .cancelCollection(AlbumApi.CANCEL_COLLECTION_URL, params)                            .subscribeOn(Schedulers.io())                            .observeOn(AndroidSchedulers.mainThread())                            .subscribe(new Consumer<BaseResponse<CollectionEntity>>() {                                @Override                                public void accept(BaseResponse<CollectionEntity> collection) throws Exception {                                    if ("200".equals(collection.getStatus())) {                                        item.isNot = "false";                                        notifyDataSetChanged();                                        setDrawable(heartIcon, true);                                    }                                    ToastUtils.showShort(collection.getMessage());                                }                            }, new Consumer<Throwable>() {                                @Override                                public void accept(Throwable throwable) throws Exception {                                }                            });                }            }        });        helper.itemView.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Intent intent = null;                if (item.clarity.equals(Constants.ORDINARY_CLARITY)) {//普通                    intent = new Intent(context, NormalAlbumDetailActivity.class);                } else if (item.clarity.equals(Constants.POPULAR_CLARITY)) {                    intent = new Intent(context, AlbumDetailActivity.class);                }                intent.putExtra("albumId", item.albumId + "");                startActivity(intent);            }        });    }    private void setDrawable(TextView followNumTv, boolean b) {        Drawable drawable = null;        if (b) {            drawable = context.getResources().getDrawable(R.mipmap.home_red_heart_icon);        } else {            drawable = context.getResources().getDrawable(R.mipmap.home_gray_heart_icon);        }        //一定要加这行！！！！！！！！！！！        drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());        followNumTv.setCompoundDrawables(null, null, drawable, null);    }}