package com.jiaoerzhang.platform.utils;import com.google.gson.Gson;import com.google.gson.JsonObject;import com.google.gson.reflect.TypeToken;import java.lang.reflect.Type;import java.util.ArrayList;public class JsonUtils {    /**     * 将对象转换为JSON字符串     */    public static String toJsonString(Object value) {        Gson gson = new Gson();        return gson.toJson(value);    }    /**     * 将JSON字符串转换为对象     *     * @param val     * @param type     * @return     */    public static <T> T fromJson(String val, Class<T> type) {        Gson gson = new Gson();        return gson.fromJson(val, type);    }    /**     * 将JSON字符串转换为集合     *     * @param json     * @param clazz     * @return     */    public static <T> ArrayList<T> jsonToArrayList(String json, Class<T> clazz) {        Type type = new TypeToken<ArrayList<JsonObject>>() {        }.getType();        ArrayList<JsonObject> jsonObjects = new Gson().fromJson(json, type);        ArrayList<T> arrayList = new ArrayList<>();        for (JsonObject jsonObject : jsonObjects) {            arrayList.add(new Gson().fromJson(jsonObject, clazz));        }        return arrayList;    }}