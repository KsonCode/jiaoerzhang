package com.jiaoerzhang.platform.ui.activity.user.settings;import android.content.Intent;import android.security.ConfirmationPrompt;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.view.View;import android.widget.Button;import android.widget.EditText;import android.widget.ImageView;import com.blankj.utilcode.util.EncryptUtils;import com.blankj.utilcode.util.SPUtils;import com.blankj.utilcode.util.ToastUtils;import com.jiaoerzhang.platform.R;import com.jiaoerzhang.platform.api.UserApi;import com.jiaoerzhang.platform.api.UserApiService;import com.jiaoerzhang.platform.entity.user.RechargeCoinEntity;import com.jiaoerzhang.platform.lib_core.base.BaseActivity;import com.jiaoerzhang.platform.lib_net.network.BaseResponse;import com.jiaoerzhang.platform.lib_net.network.Response;import com.jiaoerzhang.platform.ui.activity.user.LoginActivity;import com.jiaoerzhang.platform.utils.RetrofitUtils;import java.util.HashMap;import java.util.List;import butterknife.BindView;import io.reactivex.android.schedulers.AndroidSchedulers;import io.reactivex.functions.Consumer;import io.reactivex.schedulers.Schedulers;public class ChangePWDActivity extends BaseActivity {   @BindView(R.id.back)    ImageView back;   @BindView(R.id.oldPWD)    EditText oldPWD;   @BindView(R.id.newPWD)    EditText newPWD;   @BindView(R.id.confirmPWD)    EditText cofirmPWD;   @BindView(R.id.confirm)    Button confirm;    @Override    protected void initData() {    }    @Override    protected void initView() {        back.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                ChangePWDActivity.this.finish();            }        });        confirm.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                HashMap<String,String> params = new HashMap<>();                if (oldPWD.getText().toString().length()==0){                    ToastUtils.showShort(R.string.pwd_old_tips);                    return;                }                if (newPWD.getText().toString().length()==0){                    ToastUtils.showShort(R.string.pwd_new_tips);                    return;                }                if (cofirmPWD.getText().toString().length()==0){                    ToastUtils.showShort(R.string.confirm_pass_empty);                    return;                }                if (!cofirmPWD.getText().toString().equals(newPWD.getText().toString())){                    ToastUtils.showShort(R.string.confrim_pass_error);                    return;                }                params.put("username", SPUtils.getInstance().getString("username"));                params.put("oldPassword", EncryptUtils.encryptMD5ToString(oldPWD.getText().toString()));                params.put("newPassword",EncryptUtils.encryptMD5ToString(newPWD.getText().toString()));                RetrofitUtils.getInstance().createService(UserApiService.class)                        .updatePWD(UserApi.UPDATE_PASSWORD_URL,params).subscribeOn(Schedulers.io())                        .observeOn(AndroidSchedulers.mainThread())                        .subscribe(new Consumer<Response>() {                            @Override                            public void accept(Response response) throws Exception {                               ToastUtils.showShort(response.getMessage());                               if (response.getStatus().equals("200")){                                   startActivity(new Intent(ChangePWDActivity.this, LoginActivity.class));                                   ChangePWDActivity.this.finish();                               }                            }                        }, new Consumer<Throwable>() {                            @Override                            public void accept(Throwable throwable) throws Exception {                            }                        });            }        });    }    @Override    protected int bindLayoutId() {        return R.layout.activity_change_pwd;    }}