package com.jiaoerzhang.platform.ui.fragment;import android.content.Intent;import android.net.Uri;import android.support.v7.widget.CardView;import android.support.v7.widget.RecyclerView;import android.text.TextUtils;import android.view.View;import android.widget.RelativeLayout;import android.widget.TextView;import com.blankj.utilcode.util.SPUtils;import com.facebook.drawee.view.SimpleDraweeView;import com.jiaoerzhang.platform.R;import com.jiaoerzhang.platform.api.UserApi;import com.jiaoerzhang.platform.api.UserApiService;import com.jiaoerzhang.platform.entity.user.UserEntity;import com.jiaoerzhang.platform.lib_core.base.BaseFragment;import com.jiaoerzhang.platform.lib_net.network.BaseResponse;import com.jiaoerzhang.platform.ui.activity.album.FavoriteAlbumActivity;import com.jiaoerzhang.platform.ui.activity.user.*;import com.jiaoerzhang.platform.ui.activity.user.FeedbackActivity;import com.jiaoerzhang.platform.ui.activity.user.settings.SettingActivity;import com.jiaoerzhang.platform.utils.RetrofitUtils;import java.util.HashMap;import butterknife.BindView;import io.reactivex.android.schedulers.AndroidSchedulers;import io.reactivex.functions.Consumer;import io.reactivex.schedulers.Schedulers;public class MineFragment extends BaseFragment implements View.OnClickListener {    @BindView(R.id.user_name)    TextView user_name;    @BindView(R.id.nick_name)    TextView nick_name;    @BindView(R.id.user_layout)    RelativeLayout user_layout;    @BindView(R.id.task)    CardView taskLayout;    @BindView(R.id.buyLayout)    CardView buyLayout;    @BindView(R.id.rechargeLayout)    CardView rechargeLayout;    @BindView(R.id.ladycoinLayout)    CardView ladycoinLayout;    @BindView(R.id.messageLayout)    CardView messageLayout;    @BindView(R.id.helpLayout)    CardView helpLayout;    @BindView(R.id.setting_layout)    CardView settingLayout;    @BindView(R.id.feedbackLayout)    CardView feedbackLayout;    @BindView(R.id.ladycoin)    TextView ladycoin;    @BindView(R.id.user_icon)    SimpleDraweeView user_icon;    @BindView(R.id.collectionNum)    TextView collectionNum;    @BindView(R.id.followingNum)    TextView followingNum;    @BindView(R.id.checkin_layout)    CardView checkinLayout;    @BindView(R.id.collectionLayout)    CardView collectionLayout;    @Override    protected int getLayoutId() {        return R.layout.fragment_mine_layout;    }    @Override    protected void initViewsAndEvents(View view) {        user_layout.setOnClickListener(this);        taskLayout.setOnClickListener(this);        collectionLayout.setOnClickListener(this);        rechargeLayout.setOnClickListener(this);        ladycoinLayout.setOnClickListener(this);        messageLayout.setOnClickListener(this);        helpLayout.setOnClickListener(this);        settingLayout.setOnClickListener(this);        feedbackLayout.setOnClickListener(this);        checkinLayout.setOnClickListener(this);        buyLayout.setOnClickListener(this);    }    @Override    public void initData() {    }    @Override    public void onResume() {        super.onResume();        getUserInfo();    }    private void getUserInfo() {        HashMap<String,String> params = new HashMap<String,String>();        params.put("username", SPUtils.getInstance().getString("username"));        RetrofitUtils.getInstance().createService(UserApiService.class)                .getUserInfo(UserApi.USERINFO_URL,params)                .subscribeOn(Schedulers.io())                .observeOn(AndroidSchedulers.mainThread())                .subscribe(new Consumer<BaseResponse<UserEntity>>() {                    @Override                    public void accept(BaseResponse<UserEntity> userEntity) throws Exception {                        if ("200".equals(userEntity.getStatus())){                            fillUserInfo(userEntity);                        }                    }                }, new Consumer<Throwable>() {                    @Override                    public void accept(Throwable throwable) throws Exception {                    }                });    }    /**     * 填充用户数据     * @param userEntity     */    private void fillUserInfo(BaseResponse<UserEntity> userEntity) {        if (TextUtils.isEmpty(userEntity.getData().getHeadUrl())){            user_icon.setImageResource(R.mipmap.user_default_icon);        }else{            Uri uri = Uri.parse(userEntity.getData().getHeadUrl());            user_icon.setImageURI(uri);        }        user_name.setText(userEntity.getData().getUsername());        nick_name.setText(userEntity.getData().getNickname());        ladycoin.setText(userEntity.getData().getLadyCoin()+"");        collectionNum.setText(userEntity.getData().getBuyCount()+"");        followingNum.setText(userEntity.getData().getFollowCount()+"");    }    @Override    protected void DetoryViewAndThing() {    }    @Override    protected void onFirstUserVisible() {    }    @Override    protected void onUserVisible() {    }    @Override    protected void onUserInvisible() {    }    @Override    public void onClick(View v) {        switch (v.getId()){            case R.id.user_layout:                if (TextUtils.isEmpty(SPUtils.getInstance().getString("username"))){                    Intent intent = new Intent(getActivity(),LoginActivity.class);                    startActivity(intent);                }else{                    Intent intent = new Intent(getActivity(),MyInfoActivity.class);                    intent.putExtra("nickname",nick_name.getText().toString());                    startActivity(intent);                }                break;            case R.id.task:                startActivity(new Intent(getActivity(), DailyTaskActivity.class));                break;                case R.id.buyLayout:                startActivity(new Intent(getActivity(), BuyedActivity.class));                break;            case R.id.rechargeLayout:                startActivity(new Intent(getActivity(), RechargeActivity.class));                break;            case R.id.ladycoinLayout:                Intent intent = new Intent(getActivity(),TransactionDetailsActivity.class);                intent.putExtra("coin",ladycoin.getText().toString());                startActivity(intent);                break;            case R.id.messageLayout:                startActivity(new Intent(getActivity(), MessageActivity.class));                break;            case R.id.helpLayout:                startActivity(new Intent(getActivity(), HelpActivity.class));                break;            case R.id.setting_layout:                startActivity(new Intent(getActivity(), SettingActivity.class));                break;            case R.id.feedbackLayout:                startActivity(new Intent(getActivity(), FeedbackActivity.class));                break;            case R.id.checkin_layout:                startActivity(new Intent(getActivity(), CheckInActivity.class));                break;            case R.id.collectionLayout:                startActivity(new Intent(getActivity(), FavoriteAlbumActivity.class));                break;        }    }}