package com.jiaoerzhang.platform.widget;import android.app.Dialog;import android.content.Context;import android.os.Bundle;import android.support.v4.content.ContextCompat;import android.view.View;import android.view.WindowManager;import android.widget.RelativeLayout;import android.widget.TextView;import com.blankj.utilcode.util.ScreenUtils;import com.jiaoerzhang.platform.R;public class PhotoDialog extends Dialog implements View.OnClickListener {    private TextView confirmTv;    private TextView cancelTv;    public boolean isPhoto = true;    private RelativeLayout photoLayout;    private RelativeLayout cameraLayout;    private Context mContext;    private OnCloseListener listener;    private SelectorListener selectorListener;    private TextView photoTv,cameraTv;    public void setListener(OnCloseListener listener) {        this.listener = listener;    }    public void setSelectorListener(SelectorListener selectorListener) {        this.selectorListener = selectorListener;    }    public PhotoDialog(Context context) {        super(context);        this.mContext = context;    }    public PhotoDialog(Context context, String content) {        super(context, R.style.dialog);        this.mContext = context;    }    public PhotoDialog(Context context, int themeResId, String content) {        super(context, themeResId);        this.mContext = context;    }    public PhotoDialog(Context context, int themeResId, String content, OnCloseListener listener) {        super(context, themeResId);        this.mContext = context;        this.listener = listener;    }    protected PhotoDialog(Context context, boolean cancelable, OnCancelListener cancelListener) {        super(context, cancelable, cancelListener);        this.mContext = context;    }    public PhotoDialog setTitle(String title){        return this;    }    public PhotoDialog setPositiveButton(String name){        return this;    }    public PhotoDialog setNegativeButton(String name){        return this;    }    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.select_photo_layout);        setCanceledOnTouchOutside(false);        initView();    }    private void initView(){        cancelTv = (TextView)findViewById(R.id.cancel);        cancelTv.setOnClickListener(this);        confirmTv = (TextView)findViewById(R.id.confirm);        confirmTv.setOnClickListener(this);        photoLayout = findViewById(R.id.photo_layout);        cameraLayout = findViewById(R.id.camera_layout);        photoTv = findViewById(R.id.photo_txt);        cameraTv = findViewById(R.id.camera_txt);        photoLayout.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                isPhoto = true;                selectorListener.onClick(isPhoto);                photoLayout.setBackgroundResource(R.drawable.pay_red_bg);                photoTv.setTextColor(ContextCompat.getColor(mContext,R.color.common_red_txt_color));                cameraLayout.setBackgroundResource(R.drawable.pay_gray_bg);                cameraTv.setTextColor(ContextCompat.getColor(mContext,R.color.common_hint_txt_color));            }        });        cameraLayout.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                isPhoto = false;                selectorListener.onClick(isPhoto);                cameraLayout.setBackgroundResource(R.drawable.pay_red_bg);                cameraTv.setTextColor(ContextCompat.getColor(mContext,R.color.common_red_txt_color));                photoLayout.setBackgroundResource(R.drawable.pay_gray_bg);                photoTv.setTextColor(ContextCompat.getColor(mContext,R.color.common_hint_txt_color));            }        });        getWindow().setBackgroundDrawableResource(android.R.color.transparent);        WindowManager.LayoutParams p = getWindow().getAttributes();  //获取对话框当前的参数值//        p.height = (int) (ScreenUtils.getScreenHeight() * 0.3);   //高度设置为屏幕的0.3        p.width = (int) (ScreenUtils.getScreenWidth() * 0.8);    //宽度设置为屏幕的0.5        getWindow().setAttributes(p);     //设置生效    }    @Override    public void onClick(View v) {        switch (v.getId()){            case R.id.cancel:                if(listener != null){                    listener.onClick(this, false);                }                break;            case R.id.confirm:                if(listener != null){                    listener.onClick(this, true);                }                break;        }    }    public interface OnCloseListener{        void onClick(Dialog dialog, boolean confirm);    }    public interface SelectorListener{        void onClick(boolean isPhoto);    }}